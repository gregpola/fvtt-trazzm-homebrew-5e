{"name":"Remove All Effects","type":"script","author":"5vlmE3uiS7OIQTEf","img":"icons/svg/cancel.svg","scope":"global","command":"let removeList = token?.actor?.effects.map(e=>e.id)\nif(removeList) await MidiQOL.socket().executeAsGM(\"removeEffects\", { actorUuid: token.actor.uuid, effects: removeList });","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":true},"core":{"sourceId":"Macro.es43oc9UPQbFyFN7"},"scene-packer":{"sourceId":"Compendium.fvtt-trazzm-homebrew-5e.homebrew-macros.7n5r0rgIapwuKNjD","hash":"1c7e3464c91202c1518db6032b5e00f1b455c07f"}},"_id":"7n5r0rgIapwuKNjD","ownership":{"default":0,"5vlmE3uiS7OIQTEf":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":null,"modifiedTime":1672418394341,"lastModifiedBy":"5vlmE3uiS7OIQTEf"}}
{"name":"Long Rest","type":"script","author":"5vlmE3uiS7OIQTEf","img":"icons/svg/sleep.svg","scope":"global","command":"for(let tok of canvas.tokens.controlled) {\n    await tok.actor.longRest({dialog: false, chat: false, newDay: true});\n}","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":true},"core":{"sourceId":"Macro.OWOxMKi91y5atqE8"},"scene-packer":{"sourceId":"Compendium.fvtt-trazzm-homebrew-5e.homebrew-macros.OMfzwU7H46qwfHCq","hash":"ef51aea8b8f33ce1e2932ff6351cb8b68839de02"}},"_id":"OMfzwU7H46qwfHCq","ownership":{"default":0,"5vlmE3uiS7OIQTEf":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":null,"modifiedTime":1672418394344,"lastModifiedBy":"5vlmE3uiS7OIQTEf"}}
{"name":"Remove Token Magic","type":"script","author":"5vlmE3uiS7OIQTEf","img":"icons/svg/cancel.svg","scope":"global","command":"await TokenMagic.deleteFiltersOnSelected();","folder":null,"sort":0,"flags":{"scene-packer":{"hash":"8f8952dac4dc558505b03f5a25b654dbbb0ad269","sourceId":"Compendium.fvtt-trazzm-homebrew-5e.homebrew-macros.WAZEdO7bITRac1Y8"},"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.1btaJkIwYQWBDthR"}},"_id":"WAZEdO7bITRac1Y8","ownership":{"default":0,"5vlmE3uiS7OIQTEf":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":null,"modifiedTime":1672418394346,"lastModifiedBy":"5vlmE3uiS7OIQTEf"}}
{"name":"HexSupport","type":"script","author":"5vlmE3uiS7OIQTEf","img":"icons/svg/dice-target.svg","scope":"global","command":"async function wait(ms) { return new Promise(resolve => { setTimeout(resolve, ms); }); }\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId);\nconst itemD = lastArg.efData.flags.dae.itemData;\nconst tokenD = canvas.tokens.get(lastArg.efData.flags.dae.tokenId);\nconst version = Math.floor(game.version);\n\nif (args[0] === \"on\") {\n    let itemName = `${getProperty((version > 9 ? tactor.flags : tactor.data.flags), \"midi-qol.hexEffect\")} Life Monitor`;\n    let primaryEffect = await tactor.effects.find(i => i.id === lastArg.effectId);\n    let effect = await tactor.effects.find(i => (version > 9 ? i.label : i.data.label) === itemName);\n    let effectData = [{\n        origin: \"\",\n        changes: [\n            { key: \"macro.execute\", mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: \"HexSupport\", priority: 20 },\n            { key: \"flags.midi-qol.hexEffect\", mode: CONST.ACTIVE_EFFECT_MODES.OVERRIDE, value: getProperty((version > 9 ? tactor.flags : tactor.data.flags), \"midi-qol.hexEffect\"), priority: 20 },\n            { key: `flags.dae.deleteUuid`, mode: CONST.ACTIVE_EFFECT_MODES.OVERRIDE, value: primaryEffect.uuid, priority: 20 }\n        ],\n        flags: { dae: { tokenId: tokenD.id, itemData: itemD, specialDuration: [\"zeroHP\"] } },\n        disabled: false,\n        transfer: false,\n        icon: itemD.img,\n        label: itemName\n    }];\n    if (!effect) {\n        await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: tactor.uuid, effects: effectData });\n        console.log(`%c${itemName} => Applied on ${tactor.name} Success`, 'background: #222; color: #bada55');\n    }\n    let casterEffect = tokenD.actor.effects.find(i => (version > 9 ? i.label : i.data.label) === `Hexblade Bonus Damage`);    \n    if (casterEffect) {        \n        let lastEffect = tactor.effects.find(i => (version > 9 ? i.label : i.data.label) === itemName);\n        let checkEffect = getProperty((version > 9 ? tokenD.actor.flags : tokenD.actor.data.flags), \"dae.deleteUuid\");\n        let effectChanges = duplicate((version > 9 ? casterEffect.changes : casterEffect.data.change));\n        effectChanges.push({ key: `flags.dae.deleteUuid`, mode: CONST.ACTIVE_EFFECT_MODES.OVERRIDE, value: lastEffect.uuid, priority: 20 });\n        let effectData = [{\n            _id: casterEffect.id,\n            changes: effectChanges\n        }]\n        console.log(`%c${itemName} => Updating Concentrating ${tokenD.actor.name}`, `background: #222; color: #bada55`);\n        if (checkEffect != lastEffect.uuid){            \n             await MidiQOL.socket().executeAsGM(\"updateEffects\", { actorUuid: tokenD.actor.uuid, updates: effectData });\n        }\n    }\n}\n\nif ((lastArg[\"expiry-reason\"] === \"midi-qol:zeroHP\") && (getProperty((version > 9 ? tactor.flags : tactor.data.flags), \"midi-qol.hexEffect\") === \"Hexblade\")) {\n    console.log(`%cHexblade => Hexblade Zero HP`, 'background: #222; color: #bada55');\n    let healType = \"healing\";\n    let damageRoll = await new Roll(`@classes.warlock.levels[${healType}] + max(1, @abilities.cha.mod)`, tokenD.actor.getRollData()).evaluate({ async: true });\n    await new MidiQOL.DamageOnlyWorkflow(tactor, target, damageRoll.total, healType, [tokenD], damageRoll, { flavor: `((Hexblade's Curse) ${CONFIG.DND5E.healingTypes[healType]})`, itemData: itemD, itemCardId: \"new\" });\n    await wait(200);\n    let effect = tactor.effects.find(i => (version > 9 ? i.label : i.data.label) === \"Hexblade Life Tap\");\n    if (effect) await MidiQOL.socket().executeAsGM(\"removeEffects\", { actorUuid: tactor.uuid, effects: [effect.id] });\n}\n\nif ((lastArg[\"expiry-reason\"] === \"midi-qol:zeroHP\") && (getProperty((version > 9 ? tactor.flags : tactor.data.flags), \"midi-qol.hexEffect\") === \"Hexcurse\")) {\n    console.log(`%cHex => Hex Zero HP`, `background: #222; color: #bada55`);\n    await wait(200);\n    let effect = tactor.effects.find(i => (version > 9 ? i.label : i.data.label) === \"Hex Curse\");\n    if (effect) await MidiQOL.socket().executeAsGM(\"removeEffects\", { actorUuid: tactor.uuid, effects: [effect.id] });\n}\n\nif (args[0] === \"off\") {\n    let itemName = `${getProperty((version > 9 ? tactor.flags : tactor.data.flags), \"midi-qol.hexEffect\")} Life Monitor`;\n    let effect = tactor.effects.find(i => (version > 9 ? i.label : i.data.label) === itemName);\n    if (effect) {\n        console.log(`%c${itemName} Shutdown`, `background: #222; color: #bada55`);\n        await MidiQOL.socket().executeAsGM(\"removeEffects\", { actorUuid: tactor.uuid, effects: [effect.id] });\n    }\n}","folder":null,"sort":0,"flags":{"scene-packer":{"hash":"8724d7f9b1e373ff8298b7ea1b8cdecf864ce792","sourceId":"Compendium.fvtt-trazzm-homebrew-5e.homebrew-macros.iiFFZXPFFtIFRNbW"},"advanced-macros":{"runAsGM":true},"core":{"sourceId":"Macro.dcxCvZF5yPccBetV"}},"_id":"iiFFZXPFFtIFRNbW","ownership":{"default":0,"5vlmE3uiS7OIQTEf":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.291","createdTime":null,"modifiedTime":1672418394347,"lastModifiedBy":"5vlmE3uiS7OIQTEf"}}
